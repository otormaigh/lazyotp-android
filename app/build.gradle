import ie.otormaigh.lazyotp.plugin.SemVer

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

if (file('../enc.properties').exists()) {
  apply from: '../enc.properties'
}

android {
  compileSdkVersion versions.compileSdk

  defaultConfig {
    applicationId "ie.otormaigh.lazyotp"
    minSdkVersion versions.minSdk
    targetSdkVersion versions.targetSdk
    versionCode SemVer.code
    versionName SemVer.name
    archivesBaseName = "lazyotp-$versionName"

    buildConfigField "String", "SLACK_TOKEN", project.properties["slack_token"]

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildFeatures {
    viewBinding true
    compose true
  }

  sourceSets {
    androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11

    // ExperimentalMaterialApi
    freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
  }

  composeOptions {
    kotlinCompilerExtensionVersion '1.2.0-alpha02'
  }

  signingConfigs {
    debug {
      storeFile file('../signing/debug.keystore')
    }

    if (file('../signing/release.keystore').exists()) {
      release {
        storeFile file('../signing/release.keystore')
        storePassword project.properties['store_password']
        keyAlias project.properties['key_alias']
        keyPassword project.properties['key_password']
      }
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
      signingConfig signingConfigs.debug
    }

    release {
      signingConfig signingConfigs.debug
      postprocessing {
        proguardFiles 'proguard-rules.pro'
        removeUnusedResources = true
        removeUnusedCode = true
        optimizeCode = true
        obfuscate = true
      }
    }
  }

  packagingOptions {
    exclude "META-INF/atomicfu.kotlin_module"
  }
}

dependencies {
  implementation deps.kotlin.stdlib
  implementation deps.kotlin.coroutine.core
  implementation deps.kotlin.coroutine.android

  implementation deps.google.material
  implementation deps.androidx.appcompat
  implementation deps.androidx.core_ktx
  implementation deps.androidx.constraintlayout
  implementation deps.androidx.prefs
  implementation deps.androidx.work.runtime_ktx
  implementation deps.androidx.room.core_ktx
  implementation deps.androidx.room.runtime
  kapt deps.androidx.room.compiler

  def compose_version = "1.2.0-alpha02"
  implementation "androidx.compose.runtime:runtime:$compose_version"
  implementation "androidx.compose.ui:ui:$compose_version"
  implementation "androidx.compose.foundation:foundation-layout:$compose_version"
  implementation "androidx.compose.material:material:$compose_version"
  implementation "androidx.compose.material:material-icons-extended:$compose_version"
  implementation "androidx.compose.foundation:foundation:$compose_version"
  implementation "androidx.compose.animation:animation:$compose_version"
  implementation "androidx.compose.ui:ui-tooling:$compose_version"
  implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
  implementation "androidx.activity:activity-compose:1.5.0-alpha01"

  implementation deps.square.retrofit.core
  implementation deps.square.okhttp.core
  implementation deps.square.okhttp.logging

  implementation deps.timber

  testImplementation deps.google.truth
  testImplementation deps.junit

  androidTestImplementation deps.androidx.test.runner
  androidTestImplementation deps.androidx.test.rules
  androidTestImplementation deps.androidx.room.testing
}
